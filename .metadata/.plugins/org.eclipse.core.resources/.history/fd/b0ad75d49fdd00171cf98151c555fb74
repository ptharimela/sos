/**
 * 
 */
package com.poornima_T.sos;

import java.util.concurrent.atomic.AtomicLong;


/**
 * @author poornima.tharimela
 *
 */
public class CreateOrderService {

	
	private static AtomicLong idCounter = new AtomicLong();
	/**
	 * Creates an order returns an OrderReference
	 * @return
	 */
	public Order makeOrder(int noOfbricks) {
		
		Order newOrder = new Order(noOfbricks);
		newOrder.setOrder_ref(generateOrderRef());
		newOrder.setFulfillOrder(Boolean.FALSE);
		newOrder.setDispatchOrder(Boolean.FALSE);
		submitOrder(newOrder);
		return newOrder;
		
	}
	public void submitOrder(Order emp){
        
        OutputStream ops = null;
        ObjectOutputStream objOps = null;
        try {
            ops = new FileOutputStream("MyEmpFile.txt");
            objOps = new ObjectOutputStream(ops);
            objOps.writeObject(emp);
            objOps.flush();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } finally{
            try{
                if(objOps != null) objOps.close();
            } catch (Exception ex){
                 
            }
        }
         
    }

	private String generateOrderRef() {
		return String.valueOf(idCounter.getAndIncrement());
	}

}
